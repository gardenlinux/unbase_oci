#!/usr/bin/env bash

set -eufo pipefail

cd "$(dirname "$(realpath "${BASH_SOURCE[0]}")")"

arch="$(podman system info --format json | jq -r '.host.arch')"
container_image="$(../../unbase_oci --print-container-image)"

while [ $# -gt 0 ]; do
	case "$1" in
		--arch)
			arch="$2"
			shift 2
			;;
		--container-image)
			container_image="$2"
			shift 2
			;;
		*)
			break
			;;
	esac
done

pushd spring_app

./gradlew bootJar

popd

podman build --arch "$arch" --tag spring-demo:latest .

podman save --format oci-archive spring-demo:latest > spring-demo.oci


podman pull --arch "$arch" ubuntu:22.04
podman save --format oci-archive ubuntu:22.04 > ubuntu.oci

../../unbase_oci --container-image "$container_image" --exclude exclude --include include --ldd-dependencies --print-tree ubuntu.oci spring-demo.oci spring-demo_bare.oci

image="$(podman load < spring-demo_bare.oci | awk '{ print $NF }')"
podman tag "$image" spring-demo:latest_bare
